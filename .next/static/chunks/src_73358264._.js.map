{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///project/sandbox/user-workspace/src/components/ui/card.tsx"],"sourcesContent":["import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nfunction Card({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"card\"\n      className={cn(\n        \"bg-card text-card-foreground flex flex-col gap-6 rounded-xl border py-6 shadow-sm\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nfunction CardHeader({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"card-header\"\n      className={cn(\n        \"@container/card-header grid auto-rows-min grid-rows-[auto_auto] items-start gap-1.5 px-6 has-data-[slot=card-action]:grid-cols-[1fr_auto] [.border-b]:pb-6\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nfunction CardTitle({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"card-title\"\n      className={cn(\"leading-none font-semibold\", className)}\n      {...props}\n    />\n  )\n}\n\nfunction CardDescription({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"card-description\"\n      className={cn(\"text-muted-foreground text-sm\", className)}\n      {...props}\n    />\n  )\n}\n\nfunction CardAction({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"card-action\"\n      className={cn(\n        \"col-start-2 row-span-2 row-start-1 self-start justify-self-end\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nfunction CardContent({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"card-content\"\n      className={cn(\"px-6\", className)}\n      {...props}\n    />\n  )\n}\n\nfunction CardFooter({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"card-footer\"\n      className={cn(\"flex items-center px-6 [.border-t]:pt-6\", className)}\n      {...props}\n    />\n  )\n}\n\nexport {\n  Card,\n  CardHeader,\n  CardFooter,\n  CardTitle,\n  CardAction,\n  CardDescription,\n  CardContent,\n}\n"],"names":[],"mappings":";;;;;;;;;;AAEA;;;AAEA,SAAS,KAAK,EAAE,SAAS,EAAE,GAAG,OAAoC;IAChE,qBACE,6LAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,qFACA;QAED,GAAG,KAAK;;;;;;AAGf;KAXS;AAaT,SAAS,WAAW,EAAE,SAAS,EAAE,GAAG,OAAoC;IACtE,qBACE,6LAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,8JACA;QAED,GAAG,KAAK;;;;;;AAGf;MAXS;AAaT,SAAS,UAAU,EAAE,SAAS,EAAE,GAAG,OAAoC;IACrE,qBACE,6LAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,8BAA8B;QAC3C,GAAG,KAAK;;;;;;AAGf;MARS;AAUT,SAAS,gBAAgB,EAAE,SAAS,EAAE,GAAG,OAAoC;IAC3E,qBACE,6LAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;QAC9C,GAAG,KAAK;;;;;;AAGf;MARS;AAUT,SAAS,WAAW,EAAE,SAAS,EAAE,GAAG,OAAoC;IACtE,qBACE,6LAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,kEACA;QAED,GAAG,KAAK;;;;;;AAGf;MAXS;AAaT,SAAS,YAAY,EAAE,SAAS,EAAE,GAAG,OAAoC;IACvE,qBACE,6LAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,QAAQ;QACrB,GAAG,KAAK;;;;;;AAGf;MARS;AAUT,SAAS,WAAW,EAAE,SAAS,EAAE,GAAG,OAAoC;IACtE,qBACE,6LAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,2CAA2C;QACxD,GAAG,KAAK;;;;;;AAGf;MARS","debugId":null}},
    {"offset": {"line": 122, "column": 0}, "map": {"version":3,"sources":["file:///project/sandbox/user-workspace/src/lib/mockData.ts"],"sourcesContent":["import { Patient, Doctor, Appointment, AppointmentStatus } from './types';\n\nexport const mockPatients: Patient[] = [\n  {\n    id: '1',\n    firstName: 'Marie',\n    lastName: 'Dubois',\n    email: 'marie.dubois@email.com',\n    phone: '01 23 45 67 89',\n    address: '15 rue de la Paix, 75001 Paris',\n    dateOfBirth: '1985-03-15',\n    medicalHistory: 'Hypertension, allergies aux antibiotiques',\n    createdAt: '2024-01-15T10:00:00Z'\n  },\n  {\n    id: '2',\n    firstName: 'Pierre',\n    lastName: 'Martin',\n    email: 'pierre.martin@email.com',\n    phone: '01 34 56 78 90',\n    address: '28 avenue des Champs, 75008 Paris',\n    dateOfBirth: '1978-07-22',\n    medicalHistory: 'Diabète type 2, antécédents cardiaques',\n    createdAt: '2024-01-20T14:30:00Z'\n  },\n  {\n    id: '3',\n    firstName: 'Sophie',\n    lastName: 'Leroy',\n    email: 'sophie.leroy@email.com',\n    phone: '01 45 67 89 01',\n    address: '42 boulevard Saint-Germain, 75005 Paris',\n    dateOfBirth: '1992-11-08',\n    medicalHistory: 'Asthme léger, aucune allergie connue',\n    createdAt: '2024-02-01T09:15:00Z'\n  },\n  {\n    id: '4',\n    firstName: 'Jean',\n    lastName: 'Moreau',\n    email: 'jean.moreau@email.com',\n    phone: '01 56 78 90 12',\n    address: '7 place de la République, 75011 Paris',\n    dateOfBirth: '1965-05-30',\n    medicalHistory: 'Arthrose, traitement anti-inflammatoire',\n    createdAt: '2024-02-10T16:45:00Z'\n  },\n  {\n    id: '5',\n    firstName: 'Isabelle',\n    lastName: 'Rousseau',\n    email: 'isabelle.rousseau@email.com',\n    phone: '01 67 89 01 23',\n    address: '33 rue du Faubourg, 75012 Paris',\n    dateOfBirth: '1988-12-03',\n    medicalHistory: 'Migraine chronique, contraception orale',\n    createdAt: '2024-02-15T11:20:00Z'\n  }\n];\n\nexport const mockDoctors: Doctor[] = [\n  {\n    id: '1',\n    firstName: 'Dr. Antoine',\n    lastName: 'Lefebvre',\n    specialty: 'Médecine Générale',\n    email: 'a.lefebvre@cabinet.com',\n    phone: '01 42 33 44 55',\n    schedule: [\n      { dayOfWeek: 1, startTime: '08:00', endTime: '18:00' },\n      { dayOfWeek: 2, startTime: '08:00', endTime: '18:00' },\n      { dayOfWeek: 3, startTime: '08:00', endTime: '18:00' },\n      { dayOfWeek: 4, startTime: '08:00', endTime: '18:00' },\n      { dayOfWeek: 5, startTime: '08:00', endTime: '16:00' }\n    ],\n    createdAt: '2024-01-01T08:00:00Z'\n  },\n  {\n    id: '2',\n    firstName: 'Dr. Catherine',\n    lastName: 'Bernard',\n    specialty: 'Cardiologie',\n    email: 'c.bernard@cabinet.com',\n    phone: '01 42 33 44 56',\n    schedule: [\n      { dayOfWeek: 1, startTime: '09:00', endTime: '17:00' },\n      { dayOfWeek: 2, startTime: '09:00', endTime: '17:00' },\n      { dayOfWeek: 4, startTime: '09:00', endTime: '17:00' },\n      { dayOfWeek: 5, startTime: '09:00', endTime: '17:00' }\n    ],\n    createdAt: '2024-01-01T08:00:00Z'\n  },\n  {\n    id: '3',\n    firstName: 'Dr. Michel',\n    lastName: 'Durand',\n    specialty: 'Dermatologie',\n    email: 'm.durand@cabinet.com',\n    phone: '01 42 33 44 57',\n    schedule: [\n      { dayOfWeek: 1, startTime: '10:00', endTime: '18:00' },\n      { dayOfWeek: 3, startTime: '10:00', endTime: '18:00' },\n      { dayOfWeek: 5, startTime: '10:00', endTime: '18:00' }\n    ],\n    createdAt: '2024-01-01T08:00:00Z'\n  },\n  {\n    id: '4',\n    firstName: 'Dr. Sylvie',\n    lastName: 'Petit',\n    specialty: 'Pédiatrie',\n    email: 's.petit@cabinet.com',\n    phone: '01 42 33 44 58',\n    schedule: [\n      { dayOfWeek: 1, startTime: '08:30', endTime: '17:30' },\n      { dayOfWeek: 2, startTime: '08:30', endTime: '17:30' },\n      { dayOfWeek: 3, startTime: '08:30', endTime: '17:30' },\n      { dayOfWeek: 4, startTime: '08:30', endTime: '17:30' }\n    ],\n    createdAt: '2024-01-01T08:00:00Z'\n  }\n];\n\nexport const mockAppointments: Appointment[] = [\n  {\n    id: '1',\n    patientId: '1',\n    doctorId: '1',\n    dateTime: '2024-12-20T09:00:00Z',\n    duration: 30,\n    status: 'confirmed' as AppointmentStatus,\n    notes: 'Consultation de routine',\n    createdAt: '2024-12-15T10:00:00Z'\n  },\n  {\n    id: '2',\n    patientId: '2',\n    doctorId: '2',\n    dateTime: '2024-12-20T14:30:00Z',\n    duration: 45,\n    status: 'scheduled' as AppointmentStatus,\n    notes: 'Suivi cardiologique',\n    createdAt: '2024-12-15T11:00:00Z'\n  },\n  {\n    id: '3',\n    patientId: '3',\n    doctorId: '1',\n    dateTime: '2024-12-21T10:15:00Z',\n    duration: 30,\n    status: 'confirmed' as AppointmentStatus,\n    notes: 'Renouvellement ordonnance',\n    createdAt: '2024-12-16T09:00:00Z'\n  },\n  {\n    id: '4',\n    patientId: '4',\n    doctorId: '3',\n    dateTime: '2024-12-21T15:00:00Z',\n    duration: 30,\n    status: 'scheduled' as AppointmentStatus,\n    notes: 'Consultation dermatologique',\n    createdAt: '2024-12-16T14:00:00Z'\n  },\n  {\n    id: '5',\n    patientId: '5',\n    doctorId: '1',\n    dateTime: '2024-12-22T11:30:00Z',\n    duration: 30,\n    status: 'confirmed' as AppointmentStatus,\n    notes: 'Suivi migraine',\n    createdAt: '2024-12-17T08:30:00Z'\n  },\n  {\n    id: '6',\n    patientId: '1',\n    doctorId: '2',\n    dateTime: '2024-12-23T09:45:00Z',\n    duration: 45,\n    status: 'scheduled' as AppointmentStatus,\n    notes: 'Contrôle tension artérielle',\n    createdAt: '2024-12-17T15:00:00Z'\n  },\n  {\n    id: '7',\n    patientId: '3',\n    doctorId: '4',\n    dateTime: '2024-12-24T10:00:00Z',\n    duration: 30,\n    status: 'cancelled' as AppointmentStatus,\n    notes: 'Consultation pédiatrique - annulée par patient',\n    createdAt: '2024-12-18T12:00:00Z'\n  }\n];\n\n// Helper functions to get data with relationships\nexport const getAppointmentWithDetails = (appointmentId: string) => {\n  const appointment = mockAppointments.find(a => a.id === appointmentId);\n  if (!appointment) return null;\n\n  const patient = mockPatients.find(p => p.id === appointment.patientId);\n  const doctor = mockDoctors.find(d => d.id === appointment.doctorId);\n\n  if (!patient || !doctor) return null;\n\n  return {\n    ...appointment,\n    patient,\n    doctor\n  };\n};\n\nexport const getAllAppointmentsWithDetails = () => {\n  return mockAppointments.map(appointment => {\n    const patient = mockPatients.find(p => p.id === appointment.patientId);\n    const doctor = mockDoctors.find(d => d.id === appointment.doctorId);\n    \n    return {\n      ...appointment,\n      patient: patient!,\n      doctor: doctor!\n    };\n  }).filter(appointment => appointment.patient && appointment.doctor);\n};\n\nexport const getPatientAppointments = (patientId: string) => {\n  return mockAppointments\n    .filter(a => a.patientId === patientId)\n    .map(appointment => {\n      const doctor = mockDoctors.find(d => d.id === appointment.doctorId);\n      return {\n        ...appointment,\n        doctor: doctor!\n      };\n    });\n};\n\nexport const getDoctorAppointments = (doctorId: string) => {\n  return mockAppointments\n    .filter(a => a.doctorId === doctorId)\n    .map(appointment => {\n      const patient = mockPatients.find(p => p.id === appointment.patientId);\n      return {\n        ...appointment,\n        patient: patient!\n      };\n    });\n};\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 436, "column": 0}, "map": {"version":3,"sources":["file:///project/sandbox/user-workspace/src/app/reports/page.tsx"],"sourcesContent":["'use client'\n\nimport { Card, CardContent, CardDescription, CardHeader, CardTitle } from '@/components/ui/card'\nimport { getAllAppointmentsWithDetails, mockPatients, mockDoctors } from '@/lib/mockData'\nimport { format, startOfMonth, endOfMonth, eachDayOfInterval, isWithinInterval } from 'date-fns'\nimport { fr } from 'date-fns/locale'\nimport { BarChart, Bar, XAxis, YAxis, CartesianGrid, Tooltip, ResponsiveContainer, PieChart, Pie, Cell, LineChart, Line } from 'recharts'\nimport { Calendar, Users, UserCheck, TrendingUp, Clock, CheckCircle } from 'lucide-react'\n\nconst COLORS = ['#0088FE', '#00C49F', '#FFBB28', '#FF8042', '#8884D8']\n\nexport default function ReportsPage() {\n  const appointments = getAllAppointmentsWithDetails()\n  const patients = mockPatients\n  const doctors = mockDoctors\n\n  // Current month data\n  const currentMonth = new Date()\n  const monthStart = startOfMonth(currentMonth)\n  const monthEnd = endOfMonth(currentMonth)\n  \n  const monthlyAppointments = appointments.filter(appointment => {\n    const appointmentDate = new Date(appointment.dateTime)\n    return isWithinInterval(appointmentDate, { start: monthStart, end: monthEnd })\n  })\n\n  // Statistics calculations\n  const totalAppointments = appointments.length\n  const confirmedAppointments = appointments.filter(a => a.status === 'confirmed').length\n  const cancelledAppointments = appointments.filter(a => a.status === 'cancelled').length\n  const completedAppointments = appointments.filter(a => a.status === 'completed').length\n\n  // Appointments by status\n  const statusData = [\n    { name: 'Confirmé', value: confirmedAppointments, color: '#00C49F' },\n    { name: 'Programmé', value: appointments.filter(a => a.status === 'scheduled').length, color: '#0088FE' },\n    { name: 'Annulé', value: cancelledAppointments, color: '#FF8042' },\n    { name: 'Terminé', value: completedAppointments, color: '#8884D8' },\n    { name: 'Absent', value: appointments.filter(a => a.status === 'no-show').length, color: '#FFBB28' }\n  ]\n\n  // Appointments by doctor\n  const doctorData = doctors.map(doctor => ({\n    name: `${doctor.firstName} ${doctor.lastName}`,\n    specialty: doctor.specialty,\n    appointments: appointments.filter(a => a.doctorId === doctor.id).length\n  }))\n\n  // Daily appointments for current month\n  const dailyData = eachDayOfInterval({ start: monthStart, end: monthEnd }).map(day => ({\n    date: format(day, 'dd/MM'),\n    appointments: appointments.filter(appointment => \n      format(new Date(appointment.dateTime), 'yyyy-MM-dd') === format(day, 'yyyy-MM-dd')\n    ).length\n  }))\n\n  // Appointments by specialty\n  const specialtyData = doctors.reduce((acc: any[], doctor) => {\n    const existing = acc.find(item => item.specialty === doctor.specialty)\n    const appointmentCount = appointments.filter(a => a.doctorId === doctor.id).length\n    \n    if (existing) {\n      existing.appointments += appointmentCount\n    } else {\n      acc.push({\n        specialty: doctor.specialty,\n        appointments: appointmentCount\n      })\n    }\n    return acc\n  }, [])\n\n  return (\n    <div className=\"space-y-6\">\n      {/* Header */}\n      <div>\n        <h1 className=\"text-3xl font-bold text-gray-900\">Rapports et Statistiques</h1>\n        <p className=\"text-gray-600 mt-1\">\n          Analyse des données du cabinet médical - {format(currentMonth, 'MMMM yyyy', { locale: fr })}\n        </p>\n      </div>\n\n      {/* Key Metrics */}\n      <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-6\">\n        <Card>\n          <CardHeader className=\"flex flex-row items-center justify-between space-y-0 pb-2\">\n            <CardTitle className=\"text-sm font-medium\">Total Rendez-vous</CardTitle>\n            <Calendar className=\"h-4 w-4 text-muted-foreground\" />\n          </CardHeader>\n          <CardContent>\n            <div className=\"text-2xl font-bold\">{totalAppointments}</div>\n            <p className=\"text-xs text-muted-foreground\">\n              {monthlyAppointments.length} ce mois\n            </p>\n          </CardContent>\n        </Card>\n\n        <Card>\n          <CardHeader className=\"flex flex-row items-center justify-between space-y-0 pb-2\">\n            <CardTitle className=\"text-sm font-medium\">Patients</CardTitle>\n            <Users className=\"h-4 w-4 text-muted-foreground\" />\n          </CardHeader>\n          <CardContent>\n            <div className=\"text-2xl font-bold\">{patients.length}</div>\n            <p className=\"text-xs text-muted-foreground\">\n              patients enregistrés\n            </p>\n          </CardContent>\n        </Card>\n\n        <Card>\n          <CardHeader className=\"flex flex-row items-center justify-between space-y-0 pb-2\">\n            <CardTitle className=\"text-sm font-medium\">Médecins</CardTitle>\n            <UserCheck className=\"h-4 w-4 text-muted-foreground\" />\n          </CardHeader>\n          <CardContent>\n            <div className=\"text-2xl font-bold\">{doctors.length}</div>\n            <p className=\"text-xs text-muted-foreground\">\n              praticiens actifs\n            </p>\n          </CardContent>\n        </Card>\n\n        <Card>\n          <CardHeader className=\"flex flex-row items-center justify-between space-y-0 pb-2\">\n            <CardTitle className=\"text-sm font-medium\">Taux de confirmation</CardTitle>\n            <CheckCircle className=\"h-4 w-4 text-muted-foreground\" />\n          </CardHeader>\n          <CardContent>\n            <div className=\"text-2xl font-bold\">\n              {totalAppointments > 0 ? Math.round((confirmedAppointments / totalAppointments) * 100) : 0}%\n            </div>\n            <p className=\"text-xs text-muted-foreground\">\n              rendez-vous confirmés\n            </p>\n          </CardContent>\n        </Card>\n      </div>\n\n      {/* Charts Row 1 */}\n      <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-6\">\n        {/* Appointments by Status */}\n        <Card>\n          <CardHeader>\n            <CardTitle>Répartition par Statut</CardTitle>\n            <CardDescription>\n              Distribution des rendez-vous selon leur statut\n            </CardDescription>\n          </CardHeader>\n          <CardContent>\n            <ResponsiveContainer width=\"100%\" height={300}>\n              <PieChart>\n                <Pie\n                  data={statusData}\n                  cx=\"50%\"\n                  cy=\"50%\"\n                  labelLine={false}\n                  label={({ name, percent }) => `${name} ${(percent * 100).toFixed(0)}%`}\n                  outerRadius={80}\n                  fill=\"#8884d8\"\n                  dataKey=\"value\"\n                >\n                  {statusData.map((entry, index) => (\n                    <Cell key={`cell-${index}`} fill={entry.color} />\n                  ))}\n                </Pie>\n                <Tooltip />\n              </PieChart>\n            </ResponsiveContainer>\n          </CardContent>\n        </Card>\n\n        {/* Appointments by Doctor */}\n        <Card>\n          <CardHeader>\n            <CardTitle>Rendez-vous par Médecin</CardTitle>\n            <CardDescription>\n              Nombre de rendez-vous par praticien\n            </CardDescription>\n          </CardHeader>\n          <CardContent>\n            <ResponsiveContainer width=\"100%\" height={300}>\n              <BarChart data={doctorData}>\n                <CartesianGrid strokeDasharray=\"3 3\" />\n                <XAxis \n                  dataKey=\"name\" \n                  angle={-45}\n                  textAnchor=\"end\"\n                  height={80}\n                  fontSize={12}\n                />\n                <YAxis />\n                <Tooltip \n                  formatter={(value, name, props) => [\n                    value, \n                    'Rendez-vous',\n                    `Spécialité: ${props.payload.specialty}`\n                  ]}\n                />\n                <Bar dataKey=\"appointments\" fill=\"#0088FE\" />\n              </BarChart>\n            </ResponsiveContainer>\n          </CardContent>\n        </Card>\n      </div>\n\n      {/* Charts Row 2 */}\n      <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-6\">\n        {/* Daily Appointments */}\n        <Card>\n          <CardHeader>\n            <CardTitle>Évolution Quotidienne</CardTitle>\n            <CardDescription>\n              Nombre de rendez-vous par jour ce mois\n            </CardDescription>\n          </CardHeader>\n          <CardContent>\n            <ResponsiveContainer width=\"100%\" height={300}>\n              <LineChart data={dailyData}>\n                <CartesianGrid strokeDasharray=\"3 3\" />\n                <XAxis dataKey=\"date\" />\n                <YAxis />\n                <Tooltip />\n                <Line \n                  type=\"monotone\" \n                  dataKey=\"appointments\" \n                  stroke=\"#00C49F\" \n                  strokeWidth={2}\n                  dot={{ fill: '#00C49F' }}\n                />\n              </LineChart>\n            </ResponsiveContainer>\n          </CardContent>\n        </Card>\n\n        {/* Appointments by Specialty */}\n        <Card>\n          <CardHeader>\n            <CardTitle>Rendez-vous par Spécialité</CardTitle>\n            <CardDescription>\n              Distribution par domaine médical\n            </CardDescription>\n          </CardHeader>\n          <CardContent>\n            <ResponsiveContainer width=\"100%\" height={300}>\n              <BarChart data={specialtyData} layout=\"horizontal\">\n                <CartesianGrid strokeDasharray=\"3 3\" />\n                <XAxis type=\"number\" />\n                <YAxis dataKey=\"specialty\" type=\"category\" width={120} />\n                <Tooltip />\n                <Bar dataKey=\"appointments\" fill=\"#FFBB28\" />\n              </BarChart>\n            </ResponsiveContainer>\n          </CardContent>\n        </Card>\n      </div>\n\n      {/* Summary Cards */}\n      <div className=\"grid grid-cols-1 md:grid-cols-3 gap-6\">\n        <Card>\n          <CardHeader>\n            <CardTitle className=\"text-lg\">Performance Mensuelle</CardTitle>\n          </CardHeader>\n          <CardContent className=\"space-y-2\">\n            <div className=\"flex justify-between\">\n              <span className=\"text-sm text-gray-600\">Rendez-vous programmés:</span>\n              <span className=\"font-medium\">{monthlyAppointments.length}</span>\n            </div>\n            <div className=\"flex justify-between\">\n              <span className=\"text-sm text-gray-600\">Taux d'annulation:</span>\n              <span className=\"font-medium text-red-600\">\n                {monthlyAppointments.length > 0 \n                  ? Math.round((monthlyAppointments.filter(a => a.status === 'cancelled').length / monthlyAppointments.length) * 100)\n                  : 0}%\n              </span>\n            </div>\n            <div className=\"flex justify-between\">\n              <span className=\"text-sm text-gray-600\">Moyenne par jour:</span>\n              <span className=\"font-medium\">\n                {Math.round(monthlyAppointments.length / new Date().getDate())}\n              </span>\n            </div>\n          </CardContent>\n        </Card>\n\n        <Card>\n          <CardHeader>\n            <CardTitle className=\"text-lg\">Spécialités Actives</CardTitle>\n          </CardHeader>\n          <CardContent className=\"space-y-2\">\n            {specialtyData.map((specialty, index) => (\n              <div key={index} className=\"flex justify-between\">\n                <span className=\"text-sm text-gray-600\">{specialty.specialty}:</span>\n                <span className=\"font-medium\">{specialty.appointments} RDV</span>\n              </div>\n            ))}\n          </CardContent>\n        </Card>\n\n        <Card>\n          <CardHeader>\n            <CardTitle className=\"text-lg\">Indicateurs Clés</CardTitle>\n          </CardHeader>\n          <CardContent className=\"space-y-2\">\n            <div className=\"flex justify-between\">\n              <span className=\"text-sm text-gray-600\">Patients par médecin:</span>\n              <span className=\"font-medium\">{Math.round(patients.length / doctors.length)}</span>\n            </div>\n            <div className=\"flex justify-between\">\n              <span className=\"text-sm text-gray-600\">RDV par patient:</span>\n              <span className=\"font-medium\">{Math.round(totalAppointments / patients.length)}</span>\n            </div>\n            <div className=\"flex justify-between\">\n              <span className=\"text-sm text-gray-600\">Charge moyenne/médecin:</span>\n              <span className=\"font-medium\">{Math.round(totalAppointments / doctors.length)}</span>\n            </div>\n          </CardContent>\n        </Card>\n      </div>\n    </div>\n  )\n}\n"],"names":[],"mappings":"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","debugId":null}}]
}